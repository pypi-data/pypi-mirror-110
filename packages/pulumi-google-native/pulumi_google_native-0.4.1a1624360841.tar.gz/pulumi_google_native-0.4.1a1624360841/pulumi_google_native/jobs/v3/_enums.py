# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'CompanySize',
    'CompensationEntryType',
    'CompensationEntryUnit',
    'JobDegreeTypesItem',
    'JobDerivedInfoJobCategoriesItem',
    'JobEmploymentTypesItem',
    'JobJobBenefitsItem',
    'JobJobLevel',
    'JobPostingRegion',
    'LocationLocationType',
    'ProcessingOptionsHtmlSanitization',
]


class CompanySize(str, Enum):
    """
    Optional. The employer's company size.
    """
    COMPANY_SIZE_UNSPECIFIED = "COMPANY_SIZE_UNSPECIFIED"
    MINI = "MINI"
    SMALL = "SMALL"
    SMEDIUM = "SMEDIUM"
    MEDIUM = "MEDIUM"
    BIG = "BIG"
    BIGGER = "BIGGER"
    GIANT = "GIANT"


class CompensationEntryType(str, Enum):
    """
    Optional. Compensation type. Default is CompensationUnit.COMPENSATION_TYPE_UNSPECIFIED.
    """
    COMPENSATION_TYPE_UNSPECIFIED = "COMPENSATION_TYPE_UNSPECIFIED"
    BASE = "BASE"
    BONUS = "BONUS"
    SIGNING_BONUS = "SIGNING_BONUS"
    EQUITY = "EQUITY"
    PROFIT_SHARING = "PROFIT_SHARING"
    COMMISSIONS = "COMMISSIONS"
    TIPS = "TIPS"
    OTHER_COMPENSATION_TYPE = "OTHER_COMPENSATION_TYPE"


class CompensationEntryUnit(str, Enum):
    """
    Optional. Frequency of the specified amount. Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
    """
    COMPENSATION_UNIT_UNSPECIFIED = "COMPENSATION_UNIT_UNSPECIFIED"
    HOURLY = "HOURLY"
    DAILY = "DAILY"
    WEEKLY = "WEEKLY"
    MONTHLY = "MONTHLY"
    YEARLY = "YEARLY"
    ONE_TIME = "ONE_TIME"
    OTHER_COMPENSATION_UNIT = "OTHER_COMPENSATION_UNIT"


class JobDegreeTypesItem(str, Enum):
    DEGREE_TYPE_UNSPECIFIED = "DEGREE_TYPE_UNSPECIFIED"
    PRIMARY_EDUCATION = "PRIMARY_EDUCATION"
    LOWER_SECONDARY_EDUCATION = "LOWER_SECONDARY_EDUCATION"
    UPPER_SECONDARY_EDUCATION = "UPPER_SECONDARY_EDUCATION"
    ADULT_REMEDIAL_EDUCATION = "ADULT_REMEDIAL_EDUCATION"
    ASSOCIATES_OR_EQUIVALENT = "ASSOCIATES_OR_EQUIVALENT"
    BACHELORS_OR_EQUIVALENT = "BACHELORS_OR_EQUIVALENT"
    MASTERS_OR_EQUIVALENT = "MASTERS_OR_EQUIVALENT"
    DOCTORAL_OR_EQUIVALENT = "DOCTORAL_OR_EQUIVALENT"


class JobDerivedInfoJobCategoriesItem(str, Enum):
    JOB_CATEGORY_UNSPECIFIED = "JOB_CATEGORY_UNSPECIFIED"
    ACCOUNTING_AND_FINANCE = "ACCOUNTING_AND_FINANCE"
    ADMINISTRATIVE_AND_OFFICE = "ADMINISTRATIVE_AND_OFFICE"
    ADVERTISING_AND_MARKETING = "ADVERTISING_AND_MARKETING"
    ANIMAL_CARE = "ANIMAL_CARE"
    ART_FASHION_AND_DESIGN = "ART_FASHION_AND_DESIGN"
    BUSINESS_OPERATIONS = "BUSINESS_OPERATIONS"
    CLEANING_AND_FACILITIES = "CLEANING_AND_FACILITIES"
    COMPUTER_AND_IT = "COMPUTER_AND_IT"
    CONSTRUCTION = "CONSTRUCTION"
    CUSTOMER_SERVICE = "CUSTOMER_SERVICE"
    EDUCATION = "EDUCATION"
    ENTERTAINMENT_AND_TRAVEL = "ENTERTAINMENT_AND_TRAVEL"
    FARMING_AND_OUTDOORS = "FARMING_AND_OUTDOORS"
    HEALTHCARE = "HEALTHCARE"
    HUMAN_RESOURCES = "HUMAN_RESOURCES"
    INSTALLATION_MAINTENANCE_AND_REPAIR = "INSTALLATION_MAINTENANCE_AND_REPAIR"
    LEGAL = "LEGAL"
    MANAGEMENT = "MANAGEMENT"
    MANUFACTURING_AND_WAREHOUSE = "MANUFACTURING_AND_WAREHOUSE"
    MEDIA_COMMUNICATIONS_AND_WRITING = "MEDIA_COMMUNICATIONS_AND_WRITING"
    OIL_GAS_AND_MINING = "OIL_GAS_AND_MINING"
    PERSONAL_CARE_AND_SERVICES = "PERSONAL_CARE_AND_SERVICES"
    PROTECTIVE_SERVICES = "PROTECTIVE_SERVICES"
    REAL_ESTATE = "REAL_ESTATE"
    RESTAURANT_AND_HOSPITALITY = "RESTAURANT_AND_HOSPITALITY"
    SALES_AND_RETAIL = "SALES_AND_RETAIL"
    SCIENCE_AND_ENGINEERING = "SCIENCE_AND_ENGINEERING"
    SOCIAL_SERVICES_AND_NON_PROFIT = "SOCIAL_SERVICES_AND_NON_PROFIT"
    SPORTS_FITNESS_AND_RECREATION = "SPORTS_FITNESS_AND_RECREATION"
    TRANSPORTATION_AND_LOGISTICS = "TRANSPORTATION_AND_LOGISTICS"


class JobEmploymentTypesItem(str, Enum):
    EMPLOYMENT_TYPE_UNSPECIFIED = "EMPLOYMENT_TYPE_UNSPECIFIED"
    FULL_TIME = "FULL_TIME"
    PART_TIME = "PART_TIME"
    CONTRACTOR = "CONTRACTOR"
    CONTRACT_TO_HIRE = "CONTRACT_TO_HIRE"
    TEMPORARY = "TEMPORARY"
    INTERN = "INTERN"
    VOLUNTEER = "VOLUNTEER"
    PER_DIEM = "PER_DIEM"
    FLY_IN_FLY_OUT = "FLY_IN_FLY_OUT"
    OTHER_EMPLOYMENT_TYPE = "OTHER_EMPLOYMENT_TYPE"


class JobJobBenefitsItem(str, Enum):
    JOB_BENEFIT_UNSPECIFIED = "JOB_BENEFIT_UNSPECIFIED"
    CHILD_CARE = "CHILD_CARE"
    DENTAL = "DENTAL"
    DOMESTIC_PARTNER = "DOMESTIC_PARTNER"
    FLEXIBLE_HOURS = "FLEXIBLE_HOURS"
    MEDICAL = "MEDICAL"
    LIFE_INSURANCE = "LIFE_INSURANCE"
    PARENTAL_LEAVE = "PARENTAL_LEAVE"
    RETIREMENT_PLAN = "RETIREMENT_PLAN"
    SICK_DAYS = "SICK_DAYS"
    VACATION = "VACATION"
    VISION = "VISION"


class JobJobLevel(str, Enum):
    """
    Optional. The experience level associated with the job, such as "Entry Level".
    """
    JOB_LEVEL_UNSPECIFIED = "JOB_LEVEL_UNSPECIFIED"
    ENTRY_LEVEL = "ENTRY_LEVEL"
    EXPERIENCED = "EXPERIENCED"
    MANAGER = "MANAGER"
    DIRECTOR = "DIRECTOR"
    EXECUTIVE = "EXECUTIVE"


class JobPostingRegion(str, Enum):
    """
    Optional. The job PostingRegion (for example, state, country) throughout which the job is available. If this field is set, a LocationFilter in a search query within the job region finds this job posting if an exact location match isn't specified. If this field is set to PostingRegion.NATION or PostingRegion.ADMINISTRATIVE_AREA, setting job Job.addresses to the same location level as this field is strongly recommended.
    """
    POSTING_REGION_UNSPECIFIED = "POSTING_REGION_UNSPECIFIED"
    ADMINISTRATIVE_AREA = "ADMINISTRATIVE_AREA"
    NATION = "NATION"
    TELECOMMUTE = "TELECOMMUTE"


class LocationLocationType(str, Enum):
    """
    The type of a location, which corresponds to the address lines field of PostalAddress. For example, "Downtown, Atlanta, GA, USA" has a type of LocationType#NEIGHBORHOOD, and "Kansas City, KS, USA" has a type of LocationType#LOCALITY.
    """
    LOCATION_TYPE_UNSPECIFIED = "LOCATION_TYPE_UNSPECIFIED"
    COUNTRY = "COUNTRY"
    ADMINISTRATIVE_AREA = "ADMINISTRATIVE_AREA"
    SUB_ADMINISTRATIVE_AREA = "SUB_ADMINISTRATIVE_AREA"
    LOCALITY = "LOCALITY"
    POSTAL_CODE = "POSTAL_CODE"
    SUB_LOCALITY = "SUB_LOCALITY"
    SUB_LOCALITY1 = "SUB_LOCALITY_1"
    SUB_LOCALITY2 = "SUB_LOCALITY_2"
    NEIGHBORHOOD = "NEIGHBORHOOD"
    STREET_ADDRESS = "STREET_ADDRESS"


class ProcessingOptionsHtmlSanitization(str, Enum):
    """
    Optional. Option for job HTML content sanitization. Applied fields are: * description * applicationInfo.instruction * incentives * qualifications * responsibilities HTML tags in these fields may be stripped if sanitiazation is not disabled. Defaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY.
    """
    HTML_SANITIZATION_UNSPECIFIED = "HTML_SANITIZATION_UNSPECIFIED"
    HTML_SANITIZATION_DISABLED = "HTML_SANITIZATION_DISABLED"
    SIMPLE_FORMATTING_ONLY = "SIMPLE_FORMATTING_ONLY"
