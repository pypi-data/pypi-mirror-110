!function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){const n="function"==typeof importScripts;var r=i(1);const s={};function o(e){var t=new r(e);const i={fields:[],data_idx:0};return-1!==function(e,t){const i=[],n=[],r=[];let o=0,f=0;try{for(;!e.empty();){var l=e.readLine();if(""===l)continue;if(void 0===l)break;const d=l.trim();if("#"===d.slice(0,1))continue;if("VERSION"===d.slice(0,7))continue;const u=d.split(/[\r\t ]/g);if("FIELDS"!==d.slice(0,6)&&"COLUMNS"!==d.slice(0,7))if("SIZE"!==d.slice(0,4))if("TYPE"!==d.slice(0,4))if("COUNT"!==d.slice(0,5))if("WIDTH"!==d.substr(0,5))if("HEIGHT"!==d.substr(0,6))if("VIEWPOINT"!==d.substr(0,9))if("POINTS"!==d.substr(0,6)){if("DATA"!==d.substr(0,4))break;{t.data_idx=e.position;const i=u[1];i&&("binary_compressed"===i.substr(0,17)?o=2:"binary"===i.substr(0,6)?o=1:"ascii"===i.substr(0,5)&&(o=0),t.data_type=o)}}else{if(!t.point_step)throw"Number of POINTS specified before COUNT in header!";f=parseInt(u[1]),t.nr_points=f}else{if(u.length<8)throw"Not enough number of elements in <VIEWPOINT>! Need 7 values (tx ty tz qw qx qy qz).";let e,i,n,r;r=0,e=parseFloat(u[1]),i=parseFloat(u[2]),n=parseFloat(u[3]),t.origin={x:e,y:i,z:n},r=parseFloat(u[4]),e=parseFloat(u[5]),i=parseFloat(u[6]),n=parseFloat(u[7]),t.orientation={w:r,x:e,y:i,z:n}}else t.height=parseInt(u[1]);else{if(t.width=parseInt(u[1]),NaN===t.width)throw"Invalid WIDTH value specified.";0!==t.point_step&&(t.row_step=t.point_step*t.width)}else{if(0===i.length||0===n.length)throw"COUNT of FIELDS specified before SIZE or TYPE in header!";let e=u.length-1;if(e!=t.fields.length)throw"The number of elements in <COUNT> differs than the number of elements in <FIELDS>!";r.length=e;let s=0;for(let n=0;n<e;++n){t.fields[n].offset=s;let e=parseInt(u[n+1]);e<1&&console.warn("Invalid COUNT value specified."),t.fields[n].count=e,s+=e*i[n]}t.point_step=s}else{if(0===i.length)throw"TYPE of FIELDS specified before SIZE in header!";let e=u.length-1;if(e!=t.fields.length)throw"The number of elements in <TYPE> differs than the number of elements in <FIELDS>!";n.length=e;for(let r=0;r<e;++r)n[r]=u[r+1],t.fields[r].datatype=a(i[r],n[r])}else{const e=u.length-1;if(e!==t.fields.length)throw"The number of elements in <SIZE> differs than the number of elements in <FIELDS>!";i.length=e;let n=0;for(let r=0;r<e;++r){let e=parseInt(u[r+1]);t.fields[r].offset=n,n+=e,i[r]=e,t.fields[r].size=e}t.point_step=n}else{const e=u.length-1;for(let i=0;i<e;++i){const e=u[i+1];t.fields[i]={name:e}}let i=0;for(let n=0;n<e;++n,i+=4)t.fields[n].offset=i,t.fields[n].datatype=s.FLOAT32,t.fields[n].count=1;t.point_step=i}}}catch(e){return console.error("[pcl::PCDReader::readHeader] ",e),-1}0===t.width&&0===t.height&&(t.width=f,t.height=1,t.row_step=t.point_step*t.width);if(0===t.height)t.height=1,console.warn("[pcl::PCDReader::readHeader] no HEIGHT given, setting to 1 (unorganized).\n"),0==t.width&&(t.width=f);else if(0==t.width&&0!=f)return console.error("[pcl::PCDReader::readHeader] HEIGHT given (%d) but no WIDTH!\n",t.height),-1;if(t.width*t.height!=f)return console.error("[pcl::PCDReader::readHeader] HEIGHT (%d) x WIDTH (%d) != number of points (%d)\n",t.height,t.width,f),-1;return 0}(t,i)&&(0===i.data_type?function(e,t){const i=t.width*t.height;t.is_dense=!0;const n=t.fields.length>=3&&"x"===t.fields[0].name&&"y"===t.fields[1].name&&"z"===t.fields[2].name,r=t.fields.length>=4&&"intensity"===t.fields[3].name;n&&(t.attributes={position:new Float32Array(3*i)});r&&(t.attributes.intensity=new Uint8Array(i));t.nr_points=i;let s=0;e.position=t.data_idx;try{for(;s<i&&!e.empty();){var o=e.readLine();if(!o)continue;const a=o.trim().split(/[\r\t ]/g);if(s>=i){console.warn("[PCDReader::read] input has more points (%d) than advertised (%d)!\n",s,i);break}n&&(t.attributes.position[3*s+0]=parseFloat(a[0]),t.attributes.position[3*s+1]=parseFloat(a[1]),t.attributes.position[3*s+2]=parseFloat(a[2])),r&&(t.attributes.intensity[s]=parseFloat(a[3])),s++}}catch(e){return console.error("[PCDReader::read] %s\n",e),-1}if(s!==i)return console.error("[PCDReader::read] Number of points read (%d) is different than expected (%d)\n",s,i),-1}(t,i):function(e,t,i){let n=t.data_idx;const s=t.point_step,o=t.width*t.height,a=t.fields.length>=3&&"x"===t.fields[0].name&&"y"===t.fields[1].name&&"z"===t.fields[2].name,l=t.fields.length>=4&&"intensity"===t.fields[3].name;a&&(t.attributes={position:new Float32Array(3*o)});l&&(t.attributes.intensity=new Uint8Array(o));if(i){e.position=t.data_idx;let i=0,n=0;i=e.readUint32(),n=e.readUint32();const s=o*t.point_step;n!==s&&(console.warn("[pcl::PCDReader::read] The estimated cloud.data size (%1) is different than the saved uncompressed value (%2)! Data corruption?\n",s,n),t.data.resize(n));const d=new Uint8Array(n),u=function(e,t){var i,n,r,s=e.length,o=t.length,a=0,f=0;do{if((i=e[a++])<32){if(i++,f+i>o)throw new Error("Output buffer is not large enough");if(a+i>s)throw new Error("Invalid compressed data");do{t[f++]=e[a++]}while(--i)}else{if(n=i>>5,r=f-((31&i)<<8)-1,a>=s)throw new Error("Invalid compressed data");if(7===n&&(n+=e[a++],a>=s))throw new Error("Invalid compressed data");if(r-=e[a++],f+n+2>o)throw new Error("Output buffer is not large enough");if(r<0)throw new Error("Invalid compressed data");if(r>=f)throw new Error("Invalid compressed data");do{t[f++]=t[r++]}while(2+--n)}}while(a<s);return f}(new Uint8Array(e._arraybuffer,t.data_idx+8,i),d);if(u!==n)throw function(e){const t=arguments;return e.replace(/%([1-9])/g,(function(e,i){return null==t[i]?"":t[i]}))}("[pcl::PCDReader::read] Size of decompressed lzf data (%1) does not match value stored in PCD header (%2). \n",u,n);const p=new r(d.buffer),c=new Array(t.fields.length);c[0]=0;for(let e=1;e<t.fields.length;++e)c[e]=c[e-1]+t.fields[e].size*o;if(a){p.position=c[0];for(let e=0;e<o;++e){const i=f(p,t.fields[0].datatype);t.attributes.position[3*e]=i}p.position=c[1];for(let e=0;e<o;++e){const i=f(p,t.fields[1].datatype);t.attributes.position[3*e+1]=i}p.position=c[2];for(let e=0;e<o;++e){const i=f(p,t.fields[2].datatype);t.attributes.position[3*e+2]=i}}if(l){p.position=c[3];for(let e=0;e<o;++e){const i=f(p,t.fields[3].datatype);t.attributes.position[e]=i}}}else for(let i=0;i<o;++i)if(a){e.position=n+i*s+t.fields[0].offset;const r=f(e,t.fields[0].datatype),o=f(e,t.fields[1].datatype),a=f(e,t.fields[2].datatype);if(t.attributes.position[3*i]=r,t.attributes.position[3*i+1]=o,t.attributes.position[3*i+2]=a,l){const n=f(e,t.fields[3].datatype);t.attributes.intensity[i]=n}}}(t,i,2===i.data_type)),i}function a(e,t){switch(e){case 1:if("I"===t)return s.INT8;if("U"===t)return s.UINT8;break;case 2:if("I"===t)return s.INT16;if("U"===t)return s.UINT16;break;case 4:if("I"===t)return s.INT32;if("U"===t)return s.UINT32;if("F"===t)return s.FLOAT32;break;case 8:if("F"===t)return s.FLOAT64}return-1}function f(e,t){switch(t){case s.INT8:case s.UINT8:case s.INT16:case s.UINT16:case s.INT32:case s.UINT32:return 0;case s.FLOAT32:return e.readFloat32();case s.FLOAT64:return e.readFloat64()}}s.FLOAT32=0,s.FLOAT64=1,n||async function(){const e=o(await async function(e,t){t||(t="blob");var i=new XMLHttpRequest;return new Promise((n,r)=>{i.responseType=t,i.open("POST",e,!0),i.onload=function(){200==this.status||0==this.status?n(i.response):(console.error("failed to load: "+e+"["+this.status+"]"),r())},i.send()})}("/pcd_examples/1612257963117846.pcd","arraybuffer"));console.log(e)}(),onmessage=function(e){let t=o(e.data.buffer);var i=t.nr_points;let n=new Uint32Array(i);for(var r=0;r<i;r++)n[r]=r;let s,a,f,l=[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY],d=[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],u=[0,0,0],p=t.attributes.position;for(let e=0;e<i;e++)s=p[3*e],a=p[3*e+1],f=p[3*e+2],isNaN(s)||isNaN(a)||isNaN(f)||(u[0]+=s/i,u[1]+=a/i,u[2]+=f/i,l[0]=Math.min(l[0],s),l[1]=Math.min(l[1],a),l[2]=Math.min(l[2],f),d[0]=Math.max(d[0],s),d[1]=Math.max(d[1],a),d[2]=Math.max(d[2],f));let c={mean:u,position:t.attributes.position.buffer,pointsCount:i,tightBoundingBox:{min:l,max:d},indices:n.buffer},h=[c.position,c.indices];if(t.attributes.intensity){let e=new Float32Array(i);e.set(t.attributes.intensity),c.intensity=e.buffer,h.push(c.intensity)}postMessage(c,h)}},function(e,t){function i(e){this.position=0,this._viewer=new DataView(e),this._arraybuffer=e,this._size=e.byteLength}i.create=function(e){return new i(new ArrayBuffer(e))};var n=i.prototype;function r(e){var t=new Uint8Array(e);try{var i=String.fromCharCode.apply(null,t),n=decodeURIComponent(escape(i))}catch(e){}return n}n.readBuffer=function(e){if(e>0){var t=this._arraybuffer.slice(this.position,this.position+e);return this.position+=e,t}},n.writeUint32=function(e){e=this._viewer.setUint32(this.position,e,!0);return this.position+=4,e},n.readUint32=function(){var e=this._viewer.getUint32(this.position,!0);return this.position+=4,e},n.readFloat32=function(){var e=this._viewer.getFloat32(this.position,!0);return this.position+=4,e},n.readFloat64=function(){var e=this._viewer.getFloat64(this.position,!0);return this.position+=8,e},n.wrtieFloat=function(e){e=this._viewer.setFloat32(this.position,e,!0);return this.position+=4,e},n.readUTF8=function(e){if(e>0){var t=this._arraybuffer.slice(this.position,this.position+e);return this.position+=e,r(t)}return""},n.readLine=function(){for(var e=this.position;this.position<this._size&&10!==this._viewer.getUint8(this.position);)this.position++;return e<this._size?r(this._arraybuffer.slice(e,this.position++)):null},n.empty=function(){return!(this.position<this._size)},e.exports=i}]);