# -*- coding: utf-8 -*-
#
# Copyright (c) 2021 Nitric Technologies Pty Ltd.
#
# This file is part of Nitric Python 3 SDK.
# See https://github.com/nitrictech/python-sdk for further info.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: event/v1/event.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='event/v1/event.proto',
  package='nitric.event.v1',
  syntax='proto3',
  serialized_options=b'\n\030io.nitric.proto.event.v1B\006EventsP\001Z\014nitric/v1;v1\252\002\025Nitric.Proto.Event.v1\312\002\025Nitric\\Proto\\Event\\V1',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x14\x65vent/v1/event.proto\x12\x0fnitric.event.v1\x1a\x1cgoogle/protobuf/struct.proto\"Q\n\x13\x45ventPublishRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12+\n\x05\x65vent\x18\x02 \x01(\x0b\x32\x1c.nitric.event.v1.NitricEvent\"\"\n\x14\x45ventPublishResponse\x12\n\n\x02id\x18\x01 \x01(\t\"\x12\n\x10TopicListRequest\"A\n\x11TopicListResponse\x12,\n\x06topics\x18\x01 \x03(\x0b\x32\x1c.nitric.event.v1.NitricTopic\"\x1b\n\x0bNitricTopic\x12\x0c\n\x04name\x18\x01 \x01(\t\"Y\n\x0bNitricEvent\x12\n\n\x02id\x18\x01 \x01(\t\x12\x14\n\x0cpayload_type\x18\x02 \x01(\t\x12(\n\x07payload\x18\x03 \x01(\x0b\x32\x17.google.protobuf.Struct2_\n\x05\x45vent\x12V\n\x07Publish\x12$.nitric.event.v1.EventPublishRequest\x1a%.nitric.event.v1.EventPublishResponse2V\n\x05Topic\x12M\n\x04List\x12!.nitric.event.v1.TopicListRequest\x1a\".nitric.event.v1.TopicListResponseBb\n\x18io.nitric.proto.event.v1B\x06\x45ventsP\x01Z\x0cnitric/v1;v1\xaa\x02\x15Nitric.Proto.Event.v1\xca\x02\x15Nitric\\Proto\\Event\\V1b\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,])




_EVENTPUBLISHREQUEST = _descriptor.Descriptor(
  name='EventPublishRequest',
  full_name='nitric.event.v1.EventPublishRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='nitric.event.v1.EventPublishRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='event', full_name='nitric.event.v1.EventPublishRequest.event', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=152,
)


_EVENTPUBLISHRESPONSE = _descriptor.Descriptor(
  name='EventPublishResponse',
  full_name='nitric.event.v1.EventPublishResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='nitric.event.v1.EventPublishResponse.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=154,
  serialized_end=188,
)


_TOPICLISTREQUEST = _descriptor.Descriptor(
  name='TopicListRequest',
  full_name='nitric.event.v1.TopicListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=190,
  serialized_end=208,
)


_TOPICLISTRESPONSE = _descriptor.Descriptor(
  name='TopicListResponse',
  full_name='nitric.event.v1.TopicListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='topics', full_name='nitric.event.v1.TopicListResponse.topics', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=275,
)


_NITRICTOPIC = _descriptor.Descriptor(
  name='NitricTopic',
  full_name='nitric.event.v1.NitricTopic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='nitric.event.v1.NitricTopic.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=304,
)


_NITRICEVENT = _descriptor.Descriptor(
  name='NitricEvent',
  full_name='nitric.event.v1.NitricEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='nitric.event.v1.NitricEvent.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='payload_type', full_name='nitric.event.v1.NitricEvent.payload_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='payload', full_name='nitric.event.v1.NitricEvent.payload', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=306,
  serialized_end=395,
)

_EVENTPUBLISHREQUEST.fields_by_name['event'].message_type = _NITRICEVENT
_TOPICLISTRESPONSE.fields_by_name['topics'].message_type = _NITRICTOPIC
_NITRICEVENT.fields_by_name['payload'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
DESCRIPTOR.message_types_by_name['EventPublishRequest'] = _EVENTPUBLISHREQUEST
DESCRIPTOR.message_types_by_name['EventPublishResponse'] = _EVENTPUBLISHRESPONSE
DESCRIPTOR.message_types_by_name['TopicListRequest'] = _TOPICLISTREQUEST
DESCRIPTOR.message_types_by_name['TopicListResponse'] = _TOPICLISTRESPONSE
DESCRIPTOR.message_types_by_name['NitricTopic'] = _NITRICTOPIC
DESCRIPTOR.message_types_by_name['NitricEvent'] = _NITRICEVENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EventPublishRequest = _reflection.GeneratedProtocolMessageType('EventPublishRequest', (_message.Message,), {
  'DESCRIPTOR' : _EVENTPUBLISHREQUEST,
  '__module__' : 'event.v1.event_pb2'
  # @@protoc_insertion_point(class_scope:nitric.event.v1.EventPublishRequest)
  })
_sym_db.RegisterMessage(EventPublishRequest)

EventPublishResponse = _reflection.GeneratedProtocolMessageType('EventPublishResponse', (_message.Message,), {
  'DESCRIPTOR' : _EVENTPUBLISHRESPONSE,
  '__module__' : 'event.v1.event_pb2'
  # @@protoc_insertion_point(class_scope:nitric.event.v1.EventPublishResponse)
  })
_sym_db.RegisterMessage(EventPublishResponse)

TopicListRequest = _reflection.GeneratedProtocolMessageType('TopicListRequest', (_message.Message,), {
  'DESCRIPTOR' : _TOPICLISTREQUEST,
  '__module__' : 'event.v1.event_pb2'
  # @@protoc_insertion_point(class_scope:nitric.event.v1.TopicListRequest)
  })
_sym_db.RegisterMessage(TopicListRequest)

TopicListResponse = _reflection.GeneratedProtocolMessageType('TopicListResponse', (_message.Message,), {
  'DESCRIPTOR' : _TOPICLISTRESPONSE,
  '__module__' : 'event.v1.event_pb2'
  # @@protoc_insertion_point(class_scope:nitric.event.v1.TopicListResponse)
  })
_sym_db.RegisterMessage(TopicListResponse)

NitricTopic = _reflection.GeneratedProtocolMessageType('NitricTopic', (_message.Message,), {
  'DESCRIPTOR' : _NITRICTOPIC,
  '__module__' : 'event.v1.event_pb2'
  # @@protoc_insertion_point(class_scope:nitric.event.v1.NitricTopic)
  })
_sym_db.RegisterMessage(NitricTopic)

NitricEvent = _reflection.GeneratedProtocolMessageType('NitricEvent', (_message.Message,), {
  'DESCRIPTOR' : _NITRICEVENT,
  '__module__' : 'event.v1.event_pb2'
  # @@protoc_insertion_point(class_scope:nitric.event.v1.NitricEvent)
  })
_sym_db.RegisterMessage(NitricEvent)


DESCRIPTOR._options = None

_EVENT = _descriptor.ServiceDescriptor(
  name='Event',
  full_name='nitric.event.v1.Event',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=397,
  serialized_end=492,
  methods=[
  _descriptor.MethodDescriptor(
    name='Publish',
    full_name='nitric.event.v1.Event.Publish',
    index=0,
    containing_service=None,
    input_type=_EVENTPUBLISHREQUEST,
    output_type=_EVENTPUBLISHRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_EVENT)

DESCRIPTOR.services_by_name['Event'] = _EVENT


_TOPIC = _descriptor.ServiceDescriptor(
  name='Topic',
  full_name='nitric.event.v1.Topic',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=494,
  serialized_end=580,
  methods=[
  _descriptor.MethodDescriptor(
    name='List',
    full_name='nitric.event.v1.Topic.List',
    index=0,
    containing_service=None,
    input_type=_TOPICLISTREQUEST,
    output_type=_TOPICLISTRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TOPIC)

DESCRIPTOR.services_by_name['Topic'] = _TOPIC

# @@protoc_insertion_point(module_scope)
