import{g as e,A as t,_ as r,p as i,L as s,c as a,d as c,s as o,e as n,f as l}from"./c.3b87a103.js";import{C as h,b as d,c as g,t as m,E as p,d as u,e as f,p as y,f as _,u as w,D as b,M as k,R as v,g as $,h as I,i as S,j as B,k as x,l as F,S as C,n as z,o as E,F as T,q as R,r as A,v as D,w as U,x as P,y as L,z as M,A as j,B as N,G as W,H as q,I as O,J as H,U as G,K as J,L as K,N as V}from"./c.aa506a18.js";import{f as X,s as Q}from"./index-805914be.js";function Y(e,t,r){if(void 0!==t)return function(e,t,r){const i=e.constructor;if(!r){const e=`__${t}`;if(!(r=i.getPropertyDescriptor(t,e)))throw new Error("@ariaProperty must be used after a @property decorator")}const s=r;let a="";if(!s.set)throw new Error(`@ariaProperty requires a setter for ${t}`);const c={configurable:!0,enumerable:!0,set(e){if(""===a){const e=i.getPropertyOptions(t);a=e.attribute}this.hasAttribute(a)&&this.removeAttribute(a),s.set.call(this,e)}};return s.get&&(c.get=function(){return s.get.call(this)}),c}(e,t,r);throw new Error("@ariaProperty only supports TypeScript Decorators")}const Z=new WeakMap,ee=e((e=>r=>{const i=Z.get(r);if(void 0===e&&r instanceof t){if(void 0!==i||!Z.has(r)){const e=r.committer.name;r.committer.element.removeAttribute(e)}}else e!==i&&r.setValue(e);Z.set(r,e)}));class te extends s{constructor(){super(...arguments),this.indeterminate=!1,this.progress=0,this.density=0,this.closed=!1}open(){this.closed=!1}close(){this.closed=!0}render(){const e={"mdc-circular-progress--closed":this.closed,"mdc-circular-progress--indeterminate":this.indeterminate},t=48+4*this.density,r={width:`${t}px`,height:`${t}px`};return a`
      <div
        class="mdc-circular-progress ${c(e)}"
        style="${o(r)}"
        role="progressbar"
        aria-label="${ee(this.ariaLabel)}"
        aria-valuemin="0"
        aria-valuemax="1"
        aria-valuenow="${ee(this.indeterminate?void 0:this.progress)}">
        ${this.renderDeterminateContainer()}
        ${this.renderIndeterminateContainer()}
      </div>`}renderDeterminateContainer(){const e=48+4*this.density,t=e/2,r=this.density>=-3?18+11*this.density/6:12.5+5*(this.density+3)/4,i=6.2831852*r,s=(1-this.progress)*i,c=this.density>=-3?4+this.density*(1/3):3+(this.density+3)*(1/6);return a`
      <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic"
             viewBox="0 0 ${e} ${e}">
          <circle class="mdc-circular-progress__determinate-track"
                  cx="${t}" cy="${t}" r="${r}"
                  stroke-width="${c}"></circle>
          <circle class="mdc-circular-progress__determinate-circle"
                  cx="${t}" cy="${t}" r="${r}"
                  stroke-dasharray="${6.2831852*r}"
                  stroke-dashoffset="${s}"
                  stroke-width="${c}"></circle>
        </svg>
      </div>`}renderIndeterminateContainer(){return a`
      <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
          ${this.renderIndeterminateSpinnerLayer()}
        </div>
      </div>`}renderIndeterminateSpinnerLayer(){const e=48+4*this.density,t=e/2,r=this.density>=-3?18+11*this.density/6:12.5+5*(this.density+3)/4,i=6.2831852*r,s=.5*i,c=this.density>=-3?4+this.density*(1/3):3+(this.density+3)*(1/6);return a`
        <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
          <svg class="mdc-circular-progress__indeterminate-circle-graphic"
               viewBox="0 0 ${e} ${e}">
            <circle cx="${t}" cy="${t}" r="${r}"
                    stroke-dasharray="${i}"
                    stroke-dashoffset="${s}"
                    stroke-width="${c}"></circle>
          </svg>
        </div>
        <div class="mdc-circular-progress__gap-patch">
          <svg class="mdc-circular-progress__indeterminate-circle-graphic"
               viewBox="0 0 ${e} ${e}">
            <circle cx="${t}" cy="${t}" r="${r}"
                    stroke-dasharray="${i}"
                    stroke-dashoffset="${s}"
                    stroke-width="${.8*c}"></circle>
          </svg>
        </div>
        <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
          <svg class="mdc-circular-progress__indeterminate-circle-graphic"
               viewBox="0 0 ${e} ${e}">
            <circle cx="${t}" cy="${t}" r="${r}"
                    stroke-dasharray="${i}"
                    stroke-dashoffset="${s}"
                    stroke-width="${c}"></circle>
          </svg>
        </div>`}update(e){super.update(e),e.has("progress")&&(this.progress>1&&(this.progress=1),this.progress<0&&(this.progress=0))}}r([i({type:Boolean,reflect:!0})],te.prototype,"indeterminate",void 0),r([i({type:Number,reflect:!0})],te.prototype,"progress",void 0),r([i({type:Number,reflect:!0})],te.prototype,"density",void 0),r([i({type:Boolean,reflect:!0})],te.prototype,"closed",void 0),r([Y,i({type:String,attribute:"aria-label"})],te.prototype,"ariaLabel",void 0);const re=n`.mdc-circular-progress__determinate-circle,.mdc-circular-progress__indeterminate-circle-graphic{stroke:#6200ee;stroke:var(--mdc-theme-primary, #6200ee)}.mdc-circular-progress__determinate-track{stroke:transparent}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:transparent}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}:host{display:inline-flex}.mdc-circular-progress__determinate-track{stroke:transparent;stroke:var(--mdc-circular-progress-track-color, transparent)}`;let ie=class extends te{};ie.styles=re,ie=r([l("mwc-circular-progress")],ie);const se=async e=>{let t;return e==h?t=await import("./c.4302b905.js"):e==d?t=await import("./c.987f3e2b.js"):e==g&&(t=await import("./c.78993cb6.js")),{...t,text:m(atob(t.text)),data:m(atob(t.data))}};class ae extends EventTarget{constructor(e,t,r){super(),this.port=e,this.logger=t,this._parent=r,this.chipName=null,this._efuses=new Array(4).fill(0),this._flashsize=4194304,this.debug=!1,this.IS_STUB=!1,this.connected=!0}get _inputBuffer(){return this._parent?this._parent._inputBuffer:this.__inputBuffer}async initialize(){await this.hardReset(!0),this._parent||(this.__inputBuffer=[],this.readLoop()),await this.sync();let e,t=await this.readRegister(1610612856);if(t==p)this.chipFamily=h;else if(t==u)this.chipFamily=g;else{if(t!=f)throw"Unknown Chip.";this.chipFamily=d}this.chipFamily==g?e=1072693328:(this.chipFamily==h||this.chipFamily==d)&&(e=1610719232);for(let t=0;t<4;t++)this._efuses[t]=await this.readRegister(e+4*t);this.chipFamily==h&&(this.chipName="ESP32"),this.chipFamily==d&&(this.chipName="ESP32-S2"),this.chipFamily==g&&(16&this._efuses[0]||65536&this._efuses[2]?this.chipName="ESP8285":this.chipName="ESP8266EX")}async readLoop(){this._reader=this.port.readable.getReader();try{for(;;){const{value:e,done:t}=await this._reader.read();if(t){this._reader.releaseLock();break}e&&0!==e.length&&this._inputBuffer.push(...Array.from(e))}}catch(e){this.connected=!1,this.dispatchEvent(new Event("disconnect"))}}async hardReset(e=!1){this.logger.log("Try hard reset."),await this.port.setSignals({dataTerminalReady:!1,requestToSend:!0}),await this.port.setSignals({dataTerminalReady:e,requestToSend:!1}),await new Promise((e=>setTimeout(e,1e3)))}macAddr(){let e,t=new Array(6).fill(0),r=this._efuses[0],i=this._efuses[1],s=this._efuses[2],a=this._efuses[3];if(this.chipFamily==g){if(0!=a)e=[a>>16&255,a>>8&255,255&a];else if(0==(i>>16&255))e=[24,254,52];else{if(1!=(i>>16&255))throw"Couldnt determine OUI";e=[172,208,116]}t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=i>>8&255,t[4]=255&i,t[5]=r>>24&255}else if(this.chipFamily==h)t[0]=s>>8&255,t[1]=255&s,t[2]=i>>24&255,t[3]=i>>16&255,t[4]=i>>8&255,t[5]=255&i;else{if(this.chipFamily!=d)throw"Unknown chip family";t[0]=s>>8&255,t[1]=255&s,t[2]=i>>24&255,t[3]=i>>16&255,t[4]=i>>8&255,t[5]=255&i}return t}async readRegister(e){this.debug&&this.logger.debug("Reading Register",e);let t=y("I",e),r=(await this.checkCommand(_,t))[0];return w("I",r)[0]}async checkCommand(e,t,r=0,i=b){i=Math.min(i,k),await this.sendCommand(e,t,r);let[s,a]=await this.getResponse(e,i);if(null===a)throw"Didn't get enough status bytes";let c=0;if(this.IS_STUB||this.chipFamily==g?c=2:[h,d].includes(this.chipFamily)?c=4:[2,4].includes(a.length)&&(c=a.length),a.length<c)throw"Didn't get enough status bytes";let o=a.slice(-c,a.length);if(a=a.slice(0,-c),this.debug&&(this.logger.debug("status",o),this.logger.debug("value",s),this.logger.debug("data",a)),1==o[0])throw o[1]==v?"Invalid (unsupported) command "+$(e):"Command failure error code "+$(o[1]);return[s,a]}async sendCommand(e,t,r=0){this._inputBuffer.length=0;let i=[192,0];i.push(e),i=i.concat(y("H",t.length)),i=i.concat(I(y("I",r))),i=i.concat(I(t)),i.push(192),this.debug&&this.logger.debug("Writing "+i.length+" byte"+(1==i.length?"":"s")+":",i),await this.writeToStream(i)}async getResponse(e,t=b){let r=[],i=0,s=!1,a=Date.now();for(;Date.now()-a<t;){if(this._inputBuffer.length>0){let e=this._inputBuffer.shift();219==e?s=!0:s?(221==e?r.push(220):220==e?r.push(192):r=r.concat([219,e]),s=!1):r.push(e)}else await S(10);if(r.length>0&&192!=r[0]&&r.shift(),r.length>1&&1!=r[1]&&r.shift(),r.length>2&&r[2]!=e&&r.shift(),r.length>4&&(i=r[3]+(r[4]<<8)),r.length==i+10)break}if(r.length!=i+10)return this.logger.log("Timed out after "+t+" milliseconds"),[null,null];this.debug&&this.logger.debug("Reading "+r.length+" byte"+(1==r.length?"":"s")+":",r);let c=r.slice(5,9),o=r.slice(9,-1);return this.debug&&this.logger.debug("value:",c,"data:",o),[c,o]}async readBuffer(e=b){let t=[],r=!1,i=Date.now();for(;Date.now()-i<e;){if(this._inputBuffer.length>0){let e=this._inputBuffer.shift();219==e?r=!0:r?(221==e?t.push(220):220==e?t.push(192):t=t.concat([219,e]),r=!1):t.push(e)}else await S(10);if(t.length>0&&192!=t[0]&&t.shift(),t.length>1&&192==t[t.length-1])break}if(t.length<2)return this.logger.log("Timed out after "+e+" milliseconds"),null;this.debug&&this.logger.debug("Reading "+t.length+" byte"+(1==t.length?"":"s")+":",t);let s=t.slice(1,-1);return this.debug&&this.logger.debug("data:",s),s}checksum(e,t=B){for(let r of e)t^=r;return t}async setBaudrate(e){if(this.chipFamily==g)this.logger.log("Baud rate can only change on ESP32 and ESP32-S2");else{this.logger.log("Attempting to change baud rate to "+e+"...");try{let t=y("<II",e,0);await this.checkCommand(x,t),await S(50),await this.checkCommand(x,t),this.logger.log("Changed baud rate to "+e)}catch(t){throw"Unable to change the baud rate, please try setting the connection speed from "+e+" to 115200 and reconnecting."}}}async sync(){for(let e=0;e<5;e++){if(await this._sync())return await S(100),!0;await S(100)}throw"Couldn't sync to ESP. Try resetting."}async _sync(){await this.sendCommand(F,C);for(let e=0;e<8;e++){let[e,t]=await this.getResponse(F,z);if(null!==t&&(t.length>1&&0==t[0]&&0==t[1]))return!0}return!1}getFlashWriteSize(){return this.chipFamily==d?E:T}async flashData(e,t,r=0){let i=e.byteLength;this.logger.log("\nWriting data with filesize:"+i),await this.flashBegin(i,r);let s=[],a=0,c=0,o=0,n=Date.now(),l=this.getFlashWriteSize();for(;i-o>0;)i-o>=l?s=Array.from(new Uint8Array(e,o,l)):(s=Array.from(new Uint8Array(e,o,i-o)),s=s.concat(new Array(l-s.length).fill(255))),await this.flashBlock(s,a,2e3),a+=1,c+=s.length,o+=l,t(c);this.logger.log("Took "+(Date.now()-n)+"ms to write "+i+" bytes")}async flashBlock(e,t,r=100){await this.checkCommand(R,y("<IIII",e.length,t,0,0).concat(e),this.checksum(e),r)}async flashBegin(e=0,t=0,r=!1){let i,s,a=this.getFlashWriteSize();[h,d].includes(this.chipFamily)&&await this.checkCommand(A,new Array(8).fill(0)),this.chipFamily==h&&(s=y("<IIIIII",0,this._flashsize,65536,4096,256,65535),await this.checkCommand(D,s));let c,o=Math.floor((e+a-1)/a);i=this.chipFamily==g?this.getEraseSize(t,e):e,c=this.IS_STUB?b:O(J,e);let n=Date.now();return s=y("<IIII",i,o,a,t),this.chipFamily==d&&(s=s.concat(y("<I",r?1:0))),this.logger.log("Erase size "+i+", blocks "+o+", block size "+a+", offset "+$(t,4)+", encrypted "+(r?"yes":"no")),await this.checkCommand(U,s,0,c),0==e||this.IS_STUB||this.logger.log("Took "+(Date.now()-n)+"ms to erase "+o+" bytes"),o}async flashFinish(){let e=y("<I",1);await this.checkCommand(P,e)}getEraseSize(e,t){let r=H,i=Math.floor((t+r-1)/r),s=16-Math.floor(e/r)%16;return i<s&&(s=i),i<2*s?Math.floor((i+1)/2*r):(i-s)*r}async memBegin(e,t,r,i){return await this.checkCommand(L,y("<IIII",e,t,r,i))}async memBlock(e,t){return await this.checkCommand(M,y("<IIII",e.length,t,0,0).concat(e),this.checksum(e))}async memFinish(e=0){let t=this.IS_STUB?b:j,r=y("<II",0==e?1:0,e);return await this.checkCommand(N,r,0,t)}async runStub(){const e=await se(this.chipFamily);let t=G;this.logger.log("Uploading stub...");for(let r of["text","data"])if(Object.keys(e).includes(r)){let i=e[r+"_start"],s=e[r].length,a=Math.floor((s+t-1)/t);await this.memBegin(s,a,t,i);for(let i of Array(a).keys()){let a=i*t,c=a+t;c>s&&(c=s),await this.memBlock(e[r].slice(a,c),i)}}this.logger.log("Running stub..."),await this.memFinish(e.entry);const r=await this.readBuffer(100),i=String.fromCharCode(...r);if("OHAI"!=i)throw"Failed to start stub. Unexpected response: "+i;this.logger.log("Stub is now running...");return new ce(this.port,this.logger,this)}async writeToStream(e){const t=this.port.writable.getWriter();await t.write(new Uint8Array(e));try{t.releaseLock()}catch(e){console.error("Ignoring release lock error",e)}}async disconnect(){this._parent?await this._parent.disconnect():(this._reader&&await this._reader.cancel(),await this.port.writable.getWriter().close(),await this.port.close(),this.connected=!1)}}class ce extends ae{constructor(){super(...arguments),this.IS_STUB=!0}async memBegin(e,t,r,i){let s=await se(this.chipFamily),a=i,c=i+e;console.log(a,c),console.log(s.data_start,s.data.length,s.text_start,s.text.length);for(let[e,t]of[[s.data_start,s.data_start+s.data.length],[s.text_start,s.text_start+s.text.length]])if(a<t&&c>e)throw"Software loader is resident at "+$(e,8)+"-"+$(t,8)+". Can't load binary at overlapping address range "+$(a,8)+"-"+$(c,8)+". Try changing the binary loading address."}async eraseFlash(){await this.checkCommand(W,[],0,q)}}const oe=async e=>{const t=await navigator.serial.requestPort();return e.log("Connecting..."),await t.open({baudRate:K}),e.log("Connected successfully."),new ae(t,e)},ne=e=>X("./wizard.html",{method:"post",body:new URLSearchParams(e)}),le=e=>X(`./info?configuration=${e}`),he=e=>X(`./delete?configuration=${e}`,{method:"post"}),de=e=>Q("compile",{configuration:e}),ge=async(e,t,r,i)=>{const s=await le(t);if(V[e.chipFamily]!==s.esp_platform)throw new Error(`Configuration does not match the platform of the connected device. Expected a ${s.esp_platform} device.`);let a;a="ESP32"===s.esp_platform?[{path:"./static/firmware/bootloader.bin",offset:4096},{path:"./static/firmware/partitions.bin",offset:32768},{path:"./static/firmware/ota.bin",offset:57344},{path:`./download.bin?configuration=${t}`,offset:65536}]:[{path:`./download.bin?configuration=${t}`,offset:0}];const c=a.map((async e=>{const t=new URL(e.path,location.href).toString(),r=await fetch(t);if(!r.ok)throw new Error(`Downlading firmware ${e.path} failed: ${r.status}`);return r.arrayBuffer()})),o=[];let n=0;for(const e of c){const t=await e;o.push(t),n+=t.byteLength}const l=await e.runStub();r&&await l.eraseFlash();let h=0,d=0;i(0);for(const e of a){const t=o.shift();await l.flashData(t,(e=>{const t=Math.floor((d+e)/n*100);t!==h&&(h=t,i(t))}),e.offset),d+=t.byteLength}i(100)};export{de as a,Y as b,oe as c,ne as d,he as e,ge as f,le as g,ee as i};
