import{x as a}from"./c.3b87a103.js";const s=a=>{let s=[];for(let e of a)219==e?s=s.concat([219,221]):192==e?s=s.concat([219,220]):s.push(e);return s},e=a=>{let s=[];for(let e=0;e<a.length;e++){let t=a.charCodeAt(e);t<=255&&s.push(t)}return s},t=(a,...s)=>{let e=0;if(a.replace(/[<>]/,"").length!=s.length)throw new Error("Pack format to Argument count mismatch");let t=[],r=!0;const o=(a,s)=>{for(let e=0;e<s;e++)r?t.push(a>>8*e&255):t.push(a>>8*(s-e)&255)};for(let t=0;t<a.length;t++)if("<"==a[t])r=!0;else if(">"==a[t])r=!1;else if("B"==a[t])o(s[e],1),e++;else if("H"==a[t])o(s[e],2),e++;else{if("I"!=a[t])throw new Error(`Unhandled character "${a[t]}" in pack format`);o(s[e],4),e++}return t},r=(a,s)=>{let e=0,t=[];for(let r of a)if("B"==r)t.push(255&s[e]),e+=1;else if("H"==r)t.push(255&s[e]|(255&s[e+1])<<8),e+=2;else{if("I"!=r)throw new Error(`Unhandled character "${r}" in unpack format`);t.push(255&s[e]|(255&s[e+1])<<8|(255&s[e+2])<<16|(255&s[e+3])<<24),e+=4}return t},o=(a,s=2)=>"0x"+a.toString(16).toUpperCase().padStart(s,"0"),U=a=>new Promise((s=>setTimeout(s,a))),l=512,n=1024,h=4096,i=115200,c=e(" UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU"),f=33382,p=50,u=12882,m=353510656,g=401408,w=1280,d=2,L=3,E=4,v=5,S=6,k=7,x=8,B=10,P=208,A=11,C=13,H=15,I=239,M=5,b=2048,j=3e3,$=6e5,q=12e5,y=100,z=3e4,D=50,F=(a,s)=>{let e=Math.floor(a*(s/486));return e<3e3?3e3:e},G="serial"in navigator,J="https:"===location.protocol||"localhost"===location.hostname,K={50:"ESP32",33382:"ESP8266"},N=a`
  <svg width="24" height="24" viewBox="0 0 24 24" slot="meta">
    <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
  </svg>
`;export{D as A,S as B,p as C,j as D,m as E,l as F,P as G,$ as H,F as I,h as J,z as K,i as L,q as M,K as N,M as R,c as S,b as U,J as a,u as b,f as c,g as d,w as e,B as f,o as g,s as h,U as i,I as j,H as k,x as l,N as m,y as n,n as o,t as p,L as q,C as r,G as s,e as t,r as u,A as v,d as w,E as x,v as y,k as z};
