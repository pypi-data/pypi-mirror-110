Metadata-Version: 2.1
Name: sarpoka
Version: 1.0.1
Summary: Sarpoka is a rapidly development Python micro framework designed for serverless applications
Home-page: https://ashraful.dev
Author: Mohammad Ashraful Islam
Author-email: ashrafulrobin3@gmail.com
License: MIT License
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Description-Content-Type: text/markdown
License-File: LICENSE

# Sarpoka [![Python Packaging](https://github.com/iashraful/sarpoka/actions/workflows/python-packaging.yml/badge.svg?branch=master)](https://github.com/iashraful/sarpoka/actions/workflows/python-packaging.yml)
> Sarpoka is a rapidly development Python micro framework designed for serverless applications

## Installation
```sh
pip install sarpoka
```

## An example of usage
```python
from sarpoka import Sarpoka

app = Sarpoka()


@app.route('/')
def home(request, response, **kwargs):
    return 'Welcome Home!!'


@app.route('/api/me', methods=['GET', 'POST'])
def get_me(request, response, **kwargs):
    response.content_type = 'application/json'
    response.status_code = 200
    return {
        'name': 'Mohammad Ashraful Islam'
    }


@app.route('/about')
def about(request, response, **kwargs):
    return '''
  <h1>Mohammad Ashraful Islam</h1>
  <div>
    Senior Software Engineer at Field Buzz<br/>
  </div>
  '''

```

## Features
* Basic Routing
* HTTP Method defining during route
* Query string support
* View function support only
* Serving html as string (File not supported yet.)

## Upcoming Features
* Database and ORM support
* Class based view support
* HTML/Markdown file rendering
* Template engine support
* ... will be added many more.

