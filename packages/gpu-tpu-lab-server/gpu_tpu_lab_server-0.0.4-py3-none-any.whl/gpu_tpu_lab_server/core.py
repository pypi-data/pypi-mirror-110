# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['run_process_in_foreground', 'run_process_in_background', 'jupyter_lab', 'vscode']

# Cell
from subprocess import Popen, PIPE, STDOUT, run
import os
import time
from importlib import import_module

# Cell
def run_process_in_foreground(command:str)->None:
    "runs bash command in foreground please check http://blog.kagesenshi.org/2008/02/teeing-python-subprocesspopen-output.html"
    child_program_process = Popen(command, shell=True, stdout=PIPE, stderr=STDOUT)
    while True:
        read_line = child_program_process.stdout.readline()
        print (read_line.strip())
        if (read_line == '' and child_program_process.poll() != None): break
    return None

# Cell
def run_process_in_background(command:str)->None:
    "runs bash command in background"
    Popen(command,shell=True)


# Cell
def jupyter_lab(lab: bool = True, dir_name: str = 'None') -> None:
    "starts jupyter lab server using localtunnel"
    from google.colab import drive
    drive.mount('/content/drive')
    os.chdir('/content/drive/MyDrive/colab/')
    command = 'nohup jupyter lab --notebook-dir="/content/drive/MyDrive/colab" --no-browser --allow-root --ip="0.0.0.0" --port="6006" &'
    run_process_in_background(command)
    time.sleep(5)
    run_process_in_foreground('npx localtunnel --port 6006')


# Cell
def vscode(subdomain: str = 'fastdaima', port: int = 9000, config_save_path: str = '/content/drive/MyDrive/colab/.vscode') -> None:
    drive = import_module('google.colab.drive')
    drive.mount('/content/drive')
    run(['curl', '-fsSL', 'https://code-server.dev/install.sh', '-O'])
    run(['bash', 'install.sh', '--version', '3.10.2'])
    run(['pip3', 'install', 'flake8', '--user'])
    run(['pip3', 'install', 'black', '--user'])
    print(f'https://{subdomain}.loca.lt/?folder=/content/drive/MyDrive/colab')
    run_process_in_foreground(
        f'code-server --port {port} --auth none --disable-telemetry --force --user-data-dir {config_save_path} & npx localtunnel -p {port} -s {subdomain} --allow-invalid-cert')
