{"version":3,"sources":["webpack://jupyterlab-python-file/./lib/index.js","webpack://jupyterlab-python-file/./style/base.css","webpack://jupyterlab-python-file/./style/index.css","webpack://jupyterlab-python-file/./style/index.css?b7f0"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAuD;AACN;AACa;AACb;AACrB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA,eAAe,wEAAmB,EAAE,2DAAS,EAAE,2DAAS,EAAE,iEAAe;AACzE;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA,aAAa;AACb;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;ACtEvB;AACsH;AAC7B;AACzF,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,iDAAiD,kEAAkE;AACnH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;ACPvC;AACsH;AAC7B;AACW;AACpG,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,kFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;ACTkD;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,mFAAO;;;;AAIxB,iEAAe,0FAAc,MAAM,E","file":"lib_index_js.b9df24b6b47706d2c019.js","sourcesContent":["import { ICommandPalette } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport '../style/index.css';\nconst FACTORY = 'Editor';\nconst ICON_CLASS = 'jp-PythonIcon';\nconst PALETTE_CATEGORY = 'Text Editor';\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.createNew = 'fileeditor:create-new-python-file';\n})(CommandIDs || (CommandIDs = {}));\nconst plugin = {\n    id: 'jupyterlab-python-file',\n    autoStart: true,\n    optional: [IFileBrowserFactory, ILauncher, IMainMenu, ICommandPalette],\n    activate: (app, browserFactory, launcher, menu, palette) => {\n        const { commands, contextMenu } = app;\n        const command = CommandIDs.createNew;\n        commands.addCommand(command, {\n            label: args => args['isPalette'] || args['isContextMenu']\n                ? 'New Python File'\n                : 'Python File',\n            caption: 'Create a new Python file',\n            iconClass: args => (args['isPalette'] ? '' : ICON_CLASS),\n            execute: async (args) => {\n                var _a, _b;\n                const cwd = (_b = (_a = args['cwd']) !== null && _a !== void 0 ? _a : browserFactory === null || browserFactory === void 0 ? void 0 : browserFactory.defaultBrowser.model.path) !== null && _b !== void 0 ? _b : undefined;\n                const model = await commands.execute('docmanager:new-untitled', {\n                    path: cwd,\n                    type: 'file',\n                    ext: 'py'\n                });\n                return commands.execute('docmanager:open', {\n                    path: model.path,\n                    factory: FACTORY\n                });\n            }\n        });\n        // add to the file browser context menu\n        const selectorContent = '.jp-DirListing-content';\n        contextMenu.addItem({\n            command,\n            args: { isContextMenu: true },\n            selector: selectorContent,\n            rank: 3\n        });\n        // add to the launcher\n        if (launcher) {\n            launcher.add({\n                command,\n                category: 'Other',\n                rank: 1\n            });\n        }\n        // add to the palette\n        if (palette) {\n            palette.addItem({\n                command,\n                args: { isPalette: true },\n                category: PALETTE_CATEGORY\n            });\n        }\n        // add to the menu\n        if (menu) {\n            menu.fileMenu.newMenu.addGroup([{ command }], 30);\n        }\n    }\n};\nconst plugins = [plugin];\nexport default plugins;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}